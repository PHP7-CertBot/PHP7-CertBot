{
    "swagger": "2.0",
    "info": {
        "title": "Certbot API",
        "version": "0.1"
    },
    "paths": {
        "/api/hello": {
            "get": {
                "summary": "Hello world test for API troubleshooting",
                "responses": {
                    "200": {
                        "description": "Hello world example"
                    }
                }
            }
        },
        "/api/acme/accounts": {
            "get": {
                "tags": [
                    "Acme Accounts"
                ],
                "summary": "List available ACME accounts for authorized user",
                "description": "",
                "operationId": "listAcmeAccounts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AcmeAccount"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Acme Accounts"
                ],
                "summary": "Create new ACME account",
                "description": "",
                "operationId": "createAcmeAccount",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "name of new account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "contact",
                        "in": "formData",
                        "description": "email contact for account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "zones",
                        "in": "formData",
                        "description": "zones this ca is authorized to issue certificates for",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "acmecaurl",
                        "in": "formData",
                        "description": "base url to ACME certificate authority",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "https://acme-staging.api.letsencrypt.org",
                            "https://acme-v01.api.letsencrypt.org"
                        ]
                    },
                    {
                        "name": "acmelicense",
                        "in": "formData",
                        "description": "url of ACME cert authority license agreement",
                        "required": true,
                        "type": "string",
                        "default": "https://letsencrypt.org/documents/LE-SA-v1.1.1-August-1-2016.pdf"
                    },
                    {
                        "name": "authtype",
                        "in": "formData",
                        "description": "authentication type for acme challenges",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "dns-01",
                            "http-01"
                        ]
                    },
                    {
                        "name": "authprovider",
                        "in": "formData",
                        "description": "provider for auth type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "authuser",
                        "in": "formData",
                        "description": "user for auth provider",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "authpass",
                        "in": "formData",
                        "description": "pass for authprovider",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AcmeAccount"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized user"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/acme/accounts/{account_id}": {
            "get": {
                "tags": [
                    "Acme Accounts"
                ],
                "summary": "Find available ACME account by account ID",
                "description": "",
                "operationId": "getAcmeAccount",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "account_id",
                        "in": "path",
                        "description": "ID of account id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AcmeAccount"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized user"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Acme Accounts"
                ],
                "summary": "Update ACME account by account ID",
                "description": "",
                "operationId": "updateAcmeAccount",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "account_id",
                        "in": "path",
                        "description": "ID of account id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "name of new account",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "contact",
                        "in": "formData",
                        "description": "email contact for account",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "acmecaurl",
                        "in": "formData",
                        "description": "base url to ACME certificate authority",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "acmelicense",
                        "in": "formData",
                        "description": "url of ACME cert authority license agreement",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "authtype",
                        "in": "formData",
                        "description": "authentication type for acme challenges",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "authprovider",
                        "in": "formData",
                        "description": "provider for auth type",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "authuser",
                        "in": "formData",
                        "description": "user for auth provider",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "authpass",
                        "in": "formData",
                        "description": "pass for authprovider",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AcmeAccount"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized user"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Acme Accounts"
                ],
                "summary": "Delete ACME account by account ID",
                "description": "",
                "operationId": "deleteAcmeAccount",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "account_id",
                        "in": "path",
                        "description": "ID of account id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthorized user"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/acme/accounts/{account_id}/register": {
            "put": {
                "tags": [
                    "Acme Accounts"
                ],
                "summary": "Update ACME account registration with ACME authority by account ID",
                "description": "",
                "operationId": "updateRegAcmeAccount",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "account_id",
                        "in": "path",
                        "description": "ID of account id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthorized user"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Acme Accounts"
                ],
                "summary": "Register ACME account with ACME authority by account ID",
                "description": "",
                "operationId": "registerAcmeAccount",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "account_id",
                        "in": "path",
                        "description": "ID of account id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthorized user"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/acme/accounts/{account_id}/certificates": {
            "get": {
                "tags": [
                    "Acme Certificates"
                ],
                "summary": "List available certificates in an ACME account",
                "description": "",
                "operationId": "listCertificates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "account_id",
                        "in": "path",
                        "description": "ID of account id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AcmeCertificate"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Acme Certificates"
                ],
                "summary": "Create a new certificate in an ACME account",
                "description": "",
                "operationId": "createCertificate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "account_id",
                        "in": "path",
                        "description": "ID of account id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "name of new certificate",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "subjects",
                        "in": "formData",
                        "description": "list of subjects for this certificate, first is CN, following are subject alternative names",
                        "required": true,
                        "type": "array",
                        "items": {
                            "description": "sibject cn or san ex: sub.domain.com",
                            "type": "string"
                        }
                    },
                    {
                        "name": "request",
                        "in": "formData",
                        "description": "optional externally generated PKCS10 certificate signing request -----BEGIN CERTIFICATE REQUEST-----\\nBASE64\\n-----END CERTIFICATE REQUEST-----",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AcmeCertificate"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized user"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/acme/accounts/{account_id}/certificates/{certificate_id}": {
            "get": {
                "tags": [
                    "Acme Certificates"
                ],
                "summary": "Find certificate in accme account by ID",
                "description": "",
                "operationId": "getCertificate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "account_id",
                        "in": "path",
                        "description": "ID of account id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "certificate_id",
                        "in": "path",
                        "description": "ID of certificate in this account",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AcmeCertificate"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized user"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Acme Certificates"
                ],
                "summary": "Update certificate in account by ID",
                "description": "",
                "operationId": "updateCertificate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "account_id",
                        "in": "path",
                        "description": "ID of account id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "certificate_id",
                        "in": "path",
                        "description": "ID of certificate",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "name of certificate",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "subjects",
                        "in": "formData",
                        "description": "list of subjects for this certificate, first is CN, following are subject alternative names",
                        "required": false,
                        "type": "array",
                        "items": {
                            "description": "sibject cn or san ex: sub.domain.com",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AcmeCertificate"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized user"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Acme Certificates"
                ],
                "summary": "Delete certificate in account by id",
                "description": "",
                "operationId": "deleteCertificate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "account_id",
                        "in": "path",
                        "description": "ID of account",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "certificate_id",
                        "in": "path",
                        "description": "ID of certificate",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthorized user"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/acme/accounts/{account_id}/certificates/{certificate_id}/generatekeys": {
            "post": {
                "tags": [
                    "Acme Certificates"
                ],
                "summary": "Generate new key pair for certificate",
                "description": "Keypair generation is required if you plan to generate a certificate signing request inside certbot",
                "operationId": "certificateGenerateKeys",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "account_id",
                        "in": "path",
                        "description": "ID of account",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "certificate_id",
                        "in": "path",
                        "description": "ID of certificate",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthorized user"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/acme/accounts/{account_id}/certificates/{certificate_id}/generaterequest": {
            "post": {
                "tags": [
                    "Acme Certificates"
                ],
                "summary": "Generate new certificate signing request",
                "description": "This is only necessary if you did not load an externally generated CSR into the tool",
                "operationId": "certificateGenerateRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "account_id",
                        "in": "path",
                        "description": "ID of account",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "certificate_id",
                        "in": "path",
                        "description": "ID of certificate",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthorized user"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/acme/accounts/{account_id}/certificates/{certificate_id}/sign": {
            "post": {
                "tags": [
                    "Acme Certificates"
                ],
                "summary": "Sign this certificates request",
                "description": "You must have signing permissions for the owning account AND a valid CSR for an ACME ca to sign must be provided or generated",
                "operationId": "certificateSign",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "account_id",
                        "in": "path",
                        "description": "ID of account",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "certificate_id",
                        "in": "path",
                        "description": "ID of certificate",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthorized user"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/acme/accounts/{account_id}/certificates/{certificate_id}/pkcs12": {
            "get": {
                "tags": [
                    "Acme Certificates"
                ],
                "summary": "Download certificate, chain, and private key PKCS12 format",
                "description": "",
                "operationId": "certificateDownloadPKCS12",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/x-pkcs12"
                ],
                "parameters": [
                    {
                        "name": "account_id",
                        "in": "path",
                        "description": "ID of account",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "certificate_id",
                        "in": "path",
                        "description": "ID of certificate",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "description": "optional password to encrypt pkcs12 file contents",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthorized user"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/acme/accounts/{account_id}/certificates/{certificate_id}/pem": {
            "get": {
                "tags": [
                    "Acme Certificates"
                ],
                "summary": "Download certificate, chain, and private key PEM encoded",
                "description": "",
                "operationId": "certificateDownloadPEM",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/x-pem-file"
                ],
                "parameters": [
                    {
                        "name": "account_id",
                        "in": "path",
                        "description": "ID of account",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "certificate_id",
                        "in": "path",
                        "description": "ID of certificate",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthorized user"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/acme/accounts/{account_id}/certificates/{certificate_id}/pem/refresh": {
            "get": {
                "tags": [
                    "Acme Certificates"
                ],
                "summary": "Download certificate, chain, and private key PEM encoded using an existing private key hash",
                "description": "",
                "operationId": "certificateDownloadPEMviaHash",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/x-pem-file"
                ],
                "parameters": [
                    {
                        "name": "account_id",
                        "in": "path",
                        "description": "ID of account",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "certificate_id",
                        "in": "path",
                        "description": "ID of certificate",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "keyhash",
                        "in": "query",
                        "description": "MD5 hash of certs private key",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthorized keyhash"
                    }
                }
            }
        },
        "/api/acme/accounts/{account_id}/certificates/{certificate_id}/pkcs12/refresh": {
            "get": {
                "tags": [
                    "Acme Certificates"
                ],
                "summary": "Download certificate, chain, and private key PKCS12 encoded using an existing private key hash",
                "description": "",
                "operationId": "certificateDownloadPKCS12",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/x-pkcs12"
                ],
                "parameters": [
                    {
                        "name": "account_id",
                        "in": "path",
                        "description": "ID of account",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "certificate_id",
                        "in": "path",
                        "description": "ID of certificate",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "description": "optional password to encrypt pkcs12 file contents",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "keyhash",
                        "in": "query",
                        "description": "MD5 hash of certs private key",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthorized keyhash"
                    }
                }
            }
        },
        "/api/authenticate": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get JSON web token by LDAP user authentication",
                "parameters": [
                    {
                        "name": "username",
                        "in": "formData",
                        "description": "LDAP username",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "description": "LDAP password",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Authentication succeeded"
                    }
                }
            }
        },
        "/api/ca/accounts": {
            "get": {
                "tags": [
                    "CA Accounts"
                ],
                "summary": "List available CA accounts for authorized user",
                "description": "",
                "operationId": "listAccounts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CaAccount"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "CA Accounts"
                ],
                "summary": "Create new CA account",
                "description": "",
                "operationId": "createAccount",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "name of new account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "contact",
                        "in": "formData",
                        "description": "email contact for account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "zones",
                        "in": "formData",
                        "description": "zones this ca is authorized to issue certificates for",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "certificate_id",
                        "in": "formData",
                        "description": "ID number of coresponding certificate object, required for signing operations",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "crlurl",
                        "in": "formData",
                        "description": "fully qualified url to certificate revocation list for this CA",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CaAccount"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized user"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/ca/accounts/{account_id}": {
            "get": {
                "tags": [
                    "CA Accounts"
                ],
                "summary": "Find available CA account by account ID",
                "description": "",
                "operationId": "getAccount",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "account_id",
                        "in": "path",
                        "description": "ID of account id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CaAccount"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized user"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "CA Accounts"
                ],
                "summary": "Update CA account by account ID",
                "description": "",
                "operationId": "updateAccount",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "account_id",
                        "in": "path",
                        "description": "ID of account",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "name of new account",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "contact",
                        "in": "formData",
                        "description": "email contact for account",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "zones",
                        "in": "formData",
                        "description": "zones this ca is authorized to issue certificates for",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "certificate_id",
                        "in": "formData",
                        "description": "ID number of coresponding certificate object, required for signing operations",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "crlurl",
                        "in": "formData",
                        "description": "fully qualified url to certificate revocation list for this CA",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CaAccount"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized user"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "CA Accounts"
                ],
                "summary": "Delete CA account by account ID",
                "description": "",
                "operationId": "deleteAccount",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "account_id",
                        "in": "path",
                        "description": "ID of account",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthorized user"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/ca/accounts/{account_id}/certificates": {
            "get": {
                "tags": [
                    "CA Certificates"
                ],
                "summary": "List available certificates in an CA account",
                "description": "",
                "operationId": "listCertificates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "account_id",
                        "in": "path",
                        "description": "ID of account id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CaCertificate"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "CA Certificates"
                ],
                "summary": "Create a new certificate in an CA account",
                "description": "",
                "operationId": "createCertificate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "account_id",
                        "in": "path",
                        "description": "ID of account id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "name of new certificate",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "formData",
                        "description": "Type of certificate to issue, such as certificate authority, client authentication, or server encryption",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "server",
                            "user",
                            "ca"
                        ]
                    },
                    {
                        "name": "subjects",
                        "in": "formData",
                        "description": "list of subjects for this certificate, first is CN, following are subject alternative names",
                        "required": true,
                        "type": "array",
                        "items": {
                            "description": "subject cn or san ex: sub.domain.com",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CaCertificate"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized user"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/ca/accounts/{account_id}/certificates/{certificate_id}": {
            "get": {
                "tags": [
                    "CA Certificates"
                ],
                "summary": "Find certificate in accme account by ID",
                "description": "",
                "operationId": "getCertificate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "account_id",
                        "in": "path",
                        "description": "ID of account id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "certificate_id",
                        "in": "path",
                        "description": "ID of certificate in this account",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CaCertificate"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized user"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "CA Certificates"
                ],
                "summary": "Update certificate in an CA account",
                "description": "",
                "operationId": "UpdateCertificate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "account_id",
                        "in": "path",
                        "description": "ID of account id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "certificate_id",
                        "in": "path",
                        "description": "ID of certificate",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "name of new certificate",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "formData",
                        "description": "Type of certificate to issue, such as certificate authority, client authentication, or server encryption",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "subjects",
                        "in": "formData",
                        "description": "list of subjects for this certificate, first is CN, following are subject alternative names",
                        "required": false,
                        "type": "array",
                        "items": {
                            "description": "subject cn or san ex: sub.domain.com",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CaCertificate"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized user"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "CA Certificates"
                ],
                "summary": "Delete certificate in account by id",
                "description": "",
                "operationId": "deleteCertificate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "account_id",
                        "in": "path",
                        "description": "ID of account",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "certificate_id",
                        "in": "path",
                        "description": "ID of certificate",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthorized user"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/ca/accounts/{account_id}/certificates/{certificate_id}/generatekeys": {
            "post": {
                "tags": [
                    "CA Certificates"
                ],
                "summary": "Generate new key pair for certificate",
                "description": "Keypair generation is required if you plan to generate a certificate signing request inside certbot",
                "operationId": "certificateGenerateKeys",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "account_id",
                        "in": "path",
                        "description": "ID of account",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "certificate_id",
                        "in": "path",
                        "description": "ID of certificate",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthorized user"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/ca/accounts/{account_id}/certificates/{certificate_id}/generaterequest": {
            "post": {
                "tags": [
                    "CA Certificates"
                ],
                "summary": "Generate new certificate signing request",
                "description": "This is only necessary if you did not load an externally generated CSR into the tool",
                "operationId": "certificateGenerateRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "account_id",
                        "in": "path",
                        "description": "ID of account",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "certificate_id",
                        "in": "path",
                        "description": "ID of certificate",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthorized user"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/ca/accounts/{account_id}/certificates/{certificate_id}/sign": {
            "post": {
                "tags": [
                    "CA Certificates"
                ],
                "summary": "Sign this certificates request",
                "description": "You must have signing permissions for the owning account AND a valid CSR for a ca to sign must be provided or generated",
                "operationId": "certificateSign",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "account_id",
                        "in": "path",
                        "description": "ID of account",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "certificate_id",
                        "in": "path",
                        "description": "ID of certificate",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthorized user"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/ca/accounts/{account_id}/certificates/{certificate_id}/pkcs12": {
            "get": {
                "tags": [
                    "CA Certificates"
                ],
                "summary": "Download certificate, chain, and private key PKCS12 format",
                "description": "",
                "operationId": "certificateDownloadPKCS12",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/x-pkcs12"
                ],
                "parameters": [
                    {
                        "name": "account_id",
                        "in": "path",
                        "description": "ID of account",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "certificate_id",
                        "in": "path",
                        "description": "ID of certificate",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "optional password to encrypt pkcs12 file contents",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthorized user"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/ca/accounts/{account_id}/certificates/{certificate_id}/pem": {
            "get": {
                "tags": [
                    "CA Certificates"
                ],
                "summary": "Download certificate, chain, and private key PEM encoded",
                "description": "",
                "operationId": "certificateDownloadPEM",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/x-pem-file"
                ],
                "parameters": [
                    {
                        "name": "account_id",
                        "in": "path",
                        "description": "ID of account",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "certificate_id",
                        "in": "path",
                        "description": "ID of certificate",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthorized user"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/ca/accounts/{account_id}/certificates/{certificate_id}/pem/refresh": {
            "get": {
                "tags": [
                    "CA Certificates"
                ],
                "summary": "Download certificate, chain, and private key PEM encoded using an existing private key hash",
                "description": "",
                "operationId": "certificateDownloadPEMviaHash",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/x-pem-file"
                ],
                "parameters": [
                    {
                        "name": "account_id",
                        "in": "path",
                        "description": "ID of account",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "certificate_id",
                        "in": "path",
                        "description": "ID of certificate",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "keyhash",
                        "in": "query",
                        "description": "MD5 hash of certs private key",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthorized user"
                    }
                }
            }
        },
        "/api/ca/accounts/{account_id}/certificates/{certificate_id}/pkcs12/refresh": {
            "get": {
                "tags": [
                    "CA Certificates"
                ],
                "summary": "Download certificate, chain, and private key PKCS12 encoded using an existing private key hash",
                "description": "",
                "operationId": "certificateDownloadPKCS12",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/x-pkcs12"
                ],
                "parameters": [
                    {
                        "name": "account_id",
                        "in": "path",
                        "description": "ID of account",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "certificate_id",
                        "in": "path",
                        "description": "ID of certificate",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "description": "optional password to encrypt pkcs12 file contents",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "keyhash",
                        "in": "query",
                        "description": "MD5 hash of certs private key",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthorized keyhash"
                    }
                }
            }
        },
        "/api/login/microsoft": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get a JWT (JSON web token) by sending an Azure AD Oauth access_token",
                "responses": {
                    "200": {
                        "description": "Authentication succeeded"
                    },
                    "401": {
                        "description": "Authentication failed"
                    }
                },
                "security": [
                    {
                        "AzureAD": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get a JWT (JSON web token) by sending an Azure AD Oauth access_token",
                "responses": {
                    "200": {
                        "description": "Authentication succeeded"
                    },
                    "401": {
                        "description": "Authentication failed"
                    }
                },
                "security": [
                    {
                        "AzureAD": []
                    }
                ]
            }
        },
        "/api/me": {
            "get": {
                "tags": [
                    "Me"
                ],
                "summary": "Get user information about the token authenticated user",
                "responses": {
                    "200": {
                        "description": "User information"
                    },
                    "401": {
                        "description": "Authentication failed"
                    }
                },
                "security": [
                    {
                        "AzureAD": []
                    }
                ]
            }
        },
        "/api/me/roles": {
            "get": {
                "tags": [
                    "Me"
                ],
                "summary": "Get user roles for the token authenticated user",
                "responses": {
                    "200": {
                        "description": "User information"
                    },
                    "401": {
                        "description": "Authentication failed"
                    }
                },
                "security": [
                    {
                        "AzureAD": []
                    }
                ]
            }
        },
        "/api/me/roles/permissions": {
            "get": {
                "tags": [
                    "Me"
                ],
                "summary": "Get user role permissions for the token authenticated user",
                "responses": {
                    "200": {
                        "description": "User information"
                    },
                    "401": {
                        "description": "Authentication failed"
                    }
                },
                "security": [
                    {
                        "AzureAD": []
                    }
                ]
            }
        }
    },
    "definitions": {
        "AcmeAccount": {
            "required": [
                "name",
                "contact",
                "zones",
                "acmeCAurl",
                "acmeLicense",
                "authType",
                "authProvider"
            ],
            "properties": {
                "id": {
                    "description": "Unique identifier for the account id",
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "description": "Name of this account",
                    "type": "string"
                },
                "contact": {
                    "description": "email address for account contact",
                    "type": "string"
                },
                "zones": {
                    "description": "List of zones this account is authorized to issue certificates for",
                    "type": "string"
                },
                "acmecaurl": {
                    "description": "Base url of ACME certificate authority",
                    "type": "string"
                },
                "acmelicense": {
                    "description": "Full url of ACME certificate authority license agreement",
                    "type": "string"
                },
                "authtype": {
                    "description": "supported authentication type http or dns",
                    "type": "string"
                },
                "authprovider": {
                    "description": "provider for authtype http path or dns provider",
                    "type": "string"
                },
                "authaccount": {
                    "description": "account id for auth providers requiring authentication",
                    "type": "string"
                },
                "authuser": {
                    "description": "username for auth providers requiring authentication",
                    "type": "string"
                },
                "authpass": {
                    "description": "password for auth providers requiring authentication",
                    "type": "string"
                },
                "status": {
                    "description": "status of this account, unregistered or registered",
                    "type": "string",
                    "enum": [
                        "unregistered",
                        "registered"
                    ]
                },
                "created_at": {
                    "description": "Date this interaction was created",
                    "type": "string",
                    "format": "date-format"
                },
                "updated_at": {
                    "description": "Date this interaction was last updated",
                    "type": "string",
                    "format": "date-format"
                },
                "deleted_at": {
                    "description": "Date this interaction was deleted",
                    "type": "string",
                    "format": "date-format"
                }
            }
        },
        "AcmeCertificate": {
            "required": [
                "name",
                "subjects"
            ],
            "properties": {
                "id": {
                    "description": "Unique identifier for the account id",
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "description": "Name of this certificate",
                    "type": "string"
                },
                "subjects": {
                    "description": "array of at least one CN followed by subject alternative names for this certificate",
                    "type": "array",
                    "items": []
                },
                "expires": {
                    "description": "Date the current certificate expires if applicable",
                    "type": "string",
                    "format": "date-format"
                },
                "status": {
                    "description": "status of this certificate, new unsigned signed etc",
                    "type": "string",
                    "enum": [
                        "new",
                        "unsigned",
                        "signed"
                    ]
                },
                "created_at": {
                    "description": "Date this interaction was created",
                    "type": "string",
                    "format": "date-format"
                },
                "updated_at": {
                    "description": "Date this interaction was last updated",
                    "type": "string",
                    "format": "date-format"
                },
                "deleted_at": {
                    "description": "Date this interaction was deleted",
                    "type": "string",
                    "format": "date-format"
                }
            }
        },
        "CaAccount": {
            "required": [
                "name",
                "contact",
                "zones"
            ],
            "properties": {
                "id": {
                    "description": "Unique identifier for the account id",
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "description": "Name of this account",
                    "type": "string"
                },
                "contact": {
                    "description": "email address for account contact",
                    "type": "string"
                },
                "zones": {
                    "description": "List of zones this account is authorized to issue certificates",
                    "type": "string"
                },
                "certificate_id": {
                    "description": "ID of CA certificate object used for signing",
                    "type": "integer"
                },
                "crlurl": {
                    "description": "Fully qualified URL of certificate revocation list",
                    "type": "string"
                },
                "status": {
                    "description": "status of this account, not currently used for anything",
                    "type": "string"
                },
                "created_at": {
                    "description": "Date this interaction was created",
                    "type": "string",
                    "format": "date-format"
                },
                "updated_at": {
                    "description": "Date this interaction was last updated",
                    "type": "string",
                    "format": "date-format"
                },
                "deleted_at": {
                    "description": "Date this interaction was deleted",
                    "type": "string",
                    "format": "date-format"
                }
            }
        },
        "CaCertificate": {
            "required": [
                "name",
                "subjects",
                "type"
            ],
            "properties": {
                "id": {
                    "description": "Unique identifier for the account id",
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "description": "Name of this certificate",
                    "type": "string"
                },
                "subjects": {
                    "description": "array of at least one CN followed by subject alternative names for this certificate",
                    "type": "array",
                    "items": []
                },
                "type": {
                    "description": "Type of certificate, intended use, template to use",
                    "type": "string",
                    "enum": [
                        "server",
                        "ca",
                        "user"
                    ]
                },
                "expires": {
                    "description": "Date the current certificate expires if applicable",
                    "type": "string",
                    "format": "date-format"
                },
                "status": {
                    "description": "status of this certificate, new unsigned signed etc",
                    "type": "string",
                    "enum": [
                        "new",
                        "unsigned",
                        "signed"
                    ]
                },
                "created_at": {
                    "description": "Date this interaction was created",
                    "type": "string",
                    "format": "date-format"
                },
                "updated_at": {
                    "description": "Date this interaction was last updated",
                    "type": "string",
                    "format": "date-format"
                },
                "deleted_at": {
                    "description": "Date this interaction was deleted",
                    "type": "string",
                    "format": "date-format"
                }
            }
        }
    },
    "securityDefinitions": {
        "AzureAD": {
            "type": "oauth2",
            "flow": "implicit",
            "authorizationUrl": "https://login.windows.net/07420c3d-c141-4c67-b6f3-f448e5adb67b/oauth2/authorize?resource=https://graph.microsoft.com",
            "scopes": {
                "openid": "Use client_id: 82d5cd59-5b97-4f81-9aed-42018ca4e242"
            }
        }
    }
}